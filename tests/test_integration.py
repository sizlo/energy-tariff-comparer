import unittest
import os
from datetime import datetime

from comparer import Comparer
from data import Data
from octopus_parser import OctopusParser
from tarrif_parser import TariffParser
from vaillant_parser import VaillantParser

TEST_DATA = os.path.join(os.path.dirname(os.path.realpath(__file__)), "data")


class ConsumptionPriceCalculatorTests(unittest.TestCase):
    def setUp(self):
        self.data = Data()

        VaillantParser(os.path.join(TEST_DATA, "vaillant", "bulk.csv"), self.data).parse()
        OctopusParser(os.path.join(TEST_DATA, "octopus", "bulk.csv"), self.data).parse()

        tariffs = [
            TariffParser().parse(os.path.join(TEST_DATA, "tariffs", "standard_valid.json")),
            TariffParser().parse(os.path.join(TEST_DATA, "tariffs", "hourly_variable_valid.json")),
            TariffParser().parse(os.path.join(TEST_DATA, "tariffs", "flat_heat_pump_rate_valid.json"))
        ]

        Comparer(self.data, tariffs).compare()

    def test_calculates_correct_prices_on_standard_tariff(self):
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 0)).tariff_prices_pence["Valid Standard Test Tariff"].total, 43.63781)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 31.187)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 2)).tariff_prices_pence["Valid Standard Test Tariff"].total, 37.4244)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 3)).tariff_prices_pence["Valid Standard Test Tariff"].total, 32.79433)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 4)).tariff_prices_pence["Valid Standard Test Tariff"].total, 37.49637)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 5)).tariff_prices_pence["Valid Standard Test Tariff"].total, 40.49512)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 6)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28.21224)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 7)).tariff_prices_pence["Valid Standard Test Tariff"].total, 42.4623)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 8)).tariff_prices_pence["Valid Standard Test Tariff"].total, 44.33352)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 9)).tariff_prices_pence["Valid Standard Test Tariff"].total, 33.60999)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 10)).tariff_prices_pence["Valid Standard Test Tariff"].total, 33.84989)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 11)).tariff_prices_pence["Valid Standard Test Tariff"].total, 32.12261)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 12)).tariff_prices_pence["Valid Standard Test Tariff"].total, 26.34102)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 13)).tariff_prices_pence["Valid Standard Test Tariff"].total, 32.43448)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 14)).tariff_prices_pence["Valid Standard Test Tariff"].total, 35.31328)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 15)).tariff_prices_pence["Valid Standard Test Tariff"].total, 34.90545)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 16)).tariff_prices_pence["Valid Standard Test Tariff"].total, 36.68071)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 17)).tariff_prices_pence["Valid Standard Test Tariff"].total, 40.44714)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 18)).tariff_prices_pence["Valid Standard Test Tariff"].total, 35.2653)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 19)).tariff_prices_pence["Valid Standard Test Tariff"].total, 42.79816)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 20)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28.69204)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 21)).tariff_prices_pence["Valid Standard Test Tariff"].total, 36.39283)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 22)).tariff_prices_pence["Valid Standard Test Tariff"].total, 42.07846)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 23)).tariff_prices_pence["Valid Standard Test Tariff"].total, 36.00899)

        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 894.79149)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 2)).tariff_prices_pence["Valid Standard Test Tariff"].total, 939.26895)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 3)).tariff_prices_pence["Valid Standard Test Tariff"].total, 874.44797)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 4)).tariff_prices_pence["Valid Standard Test Tariff"].total, 937.44571)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 5)).tariff_prices_pence["Valid Standard Test Tariff"].total, 908.15392)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 6)).tariff_prices_pence["Valid Standard Test Tariff"].total, 877.06288)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 7)).tariff_prices_pence["Valid Standard Test Tariff"].total, 921.42039)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 8)).tariff_prices_pence["Valid Standard Test Tariff"].total, 927.29794)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 9)).tariff_prices_pence["Valid Standard Test Tariff"].total, 897.93418)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 10)).tariff_prices_pence["Valid Standard Test Tariff"].total, 896.85463)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 11)).tariff_prices_pence["Valid Standard Test Tariff"].total, 994.03812)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 12)).tariff_prices_pence["Valid Standard Test Tariff"].total, 886.89878)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 13)).tariff_prices_pence["Valid Standard Test Tariff"].total, 911.29661)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 14)).tariff_prices_pence["Valid Standard Test Tariff"].total, 882.55659)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 15)).tariff_prices_pence["Valid Standard Test Tariff"].total, 902.03647)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 16)).tariff_prices_pence["Valid Standard Test Tariff"].total, 954.76649)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 17)).tariff_prices_pence["Valid Standard Test Tariff"].total, 893.40007)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 18)).tariff_prices_pence["Valid Standard Test Tariff"].total, 905.68295)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 19)).tariff_prices_pence["Valid Standard Test Tariff"].total, 915.11102)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 20)).tariff_prices_pence["Valid Standard Test Tariff"].total, 917.05421)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 21)).tariff_prices_pence["Valid Standard Test Tariff"].total, 933.72726)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 22)).tariff_prices_pence["Valid Standard Test Tariff"].total, 894.0478)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 23)).tariff_prices_pence["Valid Standard Test Tariff"].total, 953.87886)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 24)).tariff_prices_pence["Valid Standard Test Tariff"].total, 908.48978)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 25)).tariff_prices_pence["Valid Standard Test Tariff"].total, 887.40257)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 26)).tariff_prices_pence["Valid Standard Test Tariff"].total, 909.49736)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 27)).tariff_prices_pence["Valid Standard Test Tariff"].total, 915.59082)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 28)).tariff_prices_pence["Valid Standard Test Tariff"].total, 915.6388)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 29)).tariff_prices_pence["Valid Standard Test Tariff"].total, 929.62497)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 30)).tariff_prices_pence["Valid Standard Test Tariff"].total, 934.25504)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 31)).tariff_prices_pence["Valid Standard Test Tariff"].total, 922.97974)

        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2022, 11, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 17476.25622, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2022, 12, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28232.15443, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28332.43263, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 2, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 25468.08518, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 3, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28196.88913, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 4, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27264.36137, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 5, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28228.388, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 6, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27516.28036, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 7, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28160.20842, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 8, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28393.87102, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 9, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27196.06184, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 10, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28329.21797, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 11, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27412.21174, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 12, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28147.0619, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28251.68229, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 2, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 26332.76922, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 3, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28435.78155, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 4, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27148.32174, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 5, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28286.49178, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 6, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27301.83375, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 7, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28471.02286, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 8, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28342.65237, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 9, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27604.68351, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 10, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28259.575, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 11, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 27333.69247, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 12, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28385.5225, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2025, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 28224.64556, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2025, 2, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 11935.0671, 3)

        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2022, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 45708.41065, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2023, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 332645.0696, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2024, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 334154.029, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2025, 1, 1)).tariff_prices_pence["Valid Standard Test Tariff"].total, 40159.7127, 3)

        self.assertAlmostEqual(self.data.total.tariff_prices_pence["Valid Standard Test Tariff"].total, 752667.222, 3)

    def test_calculates_correct_prices_on_flat_heat_pump_rate_tariff(self):
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 0)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 43.00091736)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 29.45892768)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 2)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 37.18017576)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 3)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 31.77171624)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 4)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 37.27162944)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 5)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 38.4673836)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 6)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26.91336384)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 7)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 41.87349936)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 8)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 43.96060152)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 9)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 32.19104592)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 10)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 33.06312312)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 11)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 31.79893704)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 12)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 24.88990968)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 13)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 31.0094616)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 14)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 34.83278472)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 15)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 33.42927528)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 16)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 36.00068952)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 17)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 38.18018952)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 18)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 35.21903328)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 19)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 41.31748632)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 20)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27.75240624)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 21)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 34.53482208)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 22)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 40.8506664)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 23)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 34.65242088)

        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 862.3618783)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 2)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 911.0894659)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 3)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 841.7177304)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 4)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 901.849247 )
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 5)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 877.0659629)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 6)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 836.8468378)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 7)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 888.6642286)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 8)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 901.3473955)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 9)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 868.3788598)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 10)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 867.7219994)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 11)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 961.5305419)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 12)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 856.4652506)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 13)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 882.0770719)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 14)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 849.8036722)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 15)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 870.5979329)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 16)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 926.7190037)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 17)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 853.3800062)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 18)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 873.6992354)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 19)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 878.5780202)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 20)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 887.3828009)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 21)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 899.8146972)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 22)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 865.0689823)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 23)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 919.4524063)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 24)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 880.6379532)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 25)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 854.8763986)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 26)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 884.0095627)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 27)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 880.9486956)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 28)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 880.6937678)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 29)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 897.946727)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 30)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 905.6444086)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 31)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 896.6496626)

        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2022, 11, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 16882.46913, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2022, 12, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27225.90866, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27345.84982, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 2, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 24586.41064, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 3, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27194.87842, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 4, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26319.53534, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 5, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27264.46294, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 6, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26565.78861, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 7, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27198.34255, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 8, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27410.43453, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 9, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26272.32815, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 10, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27329.2906, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 11, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26445.99037, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 12, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27156.17776, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27244.16298, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 2, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 25426.21816, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 3, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27439.25548, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 4, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26219.55819, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 5, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27289.2142, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 6, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26372.64576, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 7, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27473.79814, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 8, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27363.0204, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 9, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26667.11487, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 10, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27306.99163, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 11, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 26313.69989, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 12, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27419.12701, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2025, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 27219.87666, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2025, 2, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 11530.6209, 3)

        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2022, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 44108.37779, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2023, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 321089.4897, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2024, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 322534.8067, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2025, 1, 1)).tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 38750.4976, 3)

        self.assertAlmostEqual(self.data.total.tariff_prices_pence["Valid Flat Heat Pump Rate Test Tariff"].total, 726483.1718, 3)

    def test_calculates_correct_prices_on_hourly_variable_tariff(self):
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 0)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 48.65825)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 34.775)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 2)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 41.73)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 3)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 36.56725)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 4)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 20.50656)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 5)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 22.14656)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 6)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 15.42912)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 7)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 47.3475)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 8)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 49.434)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 9)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 37.47675)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 10)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 37.74425)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 11)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 35.81825)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 12)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 29.3715)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 13)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 17.73824)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 14)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 19.31264)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 15)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 19.0896)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 16)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 61.34348)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 17)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 67.64232)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 18)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 58.9764)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 19)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 47.722)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 20)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 31.993)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 21)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 40.57975)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 22)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 23.01248)
        self.assertAlmostEqual(self.data.hourly.at_start(datetime(2022, 12, 2, 23)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 19.69312)

        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 891.76982)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 2)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 934.1084)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 3)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 863.78773)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 4)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 913.60135)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 5)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 908.28868)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 6)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 871.44766)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 7)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 932.16253)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 8)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 918.96989)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 9)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 893.89678)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 10)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 891.36842)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 11)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 1000.02308)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 12)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 878.03332)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 13)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 897.87827)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 14)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 878.1352)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 15)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 923.27598)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 16)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 945.50616)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 17)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 890.50021)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 18)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 907.46258)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 19)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 913.1374)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 20)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 919.17903)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 21)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 933.15657)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 22)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 907.55393)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 23)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 950.20732)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 24)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 906.73337)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 25)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 887.70963)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 26)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 892.56358)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 27)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 923.52873)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 28)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 928.87613)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 29)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 919.13204)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 30)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 925.73094)
        self.assertAlmostEqual(self.data.daily.at_start(datetime(2024, 8, 31)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 928.1426)

        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2022, 11, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 17359.69194, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2022, 12, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28108.506, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28197.94453, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 2, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 25386.82466, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 3, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28016.85227, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 4, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27101.16757, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 5, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28164.94661, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 6, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27475.34768, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 7, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28094.09388, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 8, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28372.13025, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 9, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27048.07985, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 10, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28296.1764, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 11, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27256.48605, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2023, 12, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28032.72424, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28149.51575, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 2, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 26329.17755, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 3, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28396.79663, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 4, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27125.429, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 5, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28081.63953, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 6, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27148.24033, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 7, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28396.00117, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 8, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28275.86733, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 9, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27588.92854, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 10, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28172.70825, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 11, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 27233.58985, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2024, 12, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28211.19114, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2025, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 28181.30956, 3)
        self.assertAlmostEqual(self.data.monthly.at_start(datetime(2025, 2, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 11888.5692, 3)

        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2022, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 45468.19794, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2023, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 331442.774, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2024, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 333109.0851, 3)
        self.assertAlmostEqual(self.data.yearly.at_start(datetime(2025, 1, 1)).tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 40069.8788, 3)

        self.assertAlmostEqual(self.data.total.tariff_prices_pence["Valid Hourly Variable Test Tariff"].total, 750089.9358, 3)
